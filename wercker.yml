box: php

build:
    steps:
        - script:
            name: Validate PHP files
            code: |
                find . -name '*.php' | xargs -I{} php -l {}

        - script:
            name: Run Unit Tests
            code: |
                php tests.php && success "All tests successfully."

        - script:
            name: copy files to pkg/
            code: |
                mkdir -p $WERCKER_OUTPUT_DIR/pkg/msg-php
                cp -r lib/ *.html *.php *.example *.md $WERCKER_OUTPUT_DIR/pkg/msg-php/

                echo "Branch: $WERCKER_GIT_BRANCH" > $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "Commit: $WERCKER_GIT_COMMIT" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "CI: $CI" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerStartedBy: $WERCKER_STARTED_BY" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerApplicationUrl: $WERCKER_APPLICATION_URL" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerBuildUrl: $WERCKER_BUILD_URL" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO

                debug "$(cat $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO)"

        - yudai/targz@0.2.1:
          input: $WERCKER_OUTPUT_DIR/pkg
          output: $WERCKER_OUTPUT_DIR/dist

        - script:
           name: show hash sums
           code: |
               info "$(cat $WERCKER_OUTPUT_DIR/dist/SHASUMS)"
               setMessage "SHA1: $(cat $WERCKER_OUTPUT_DIR/dist/SHASUMS)"

        - script:
            name: Upload Build Artifact
            code: |
                test -z "$FS_USER" && fail "Env FS_USER missing."
                test -z "$FS_PASSWORD" && fail "Env FS_PASSWORD missing."
                test -z "$FS_ENDPOINT" && fail "Env FS_ENDPOINT missing."

                name=msg-php
                file="$WERCKER_OUTPUT_DIR/dist/${name}.tar.gz"
                path="/artifacts/${name}/${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}/${name}.tar.gz"
                acl=public-read

                # debug output
                setMessage "Artifact: $(ls -lah $file)"
                info "Local file: $(ls -lah $file)"
                info "ACL: ${acl}"
                info "Remote path: ${path}"

                # do the upload
                basecurl="curl -sS -u${FS_USER}:${FS_PASSWORD} ${FS_ENDPOINT}"
                upload=$(${basecurl}${path}.ignore -XPUT --data-binary @$file -H"X-ACL: ${acl}" -H'Content-Type: application/octet-stream' --output upload_result.json -w '%{http_code}')
                test "$upload" -eq 201 && success "Upload completed." || fail "upload: $(cat upload_result.json)"
deploy:
    steps:
        - script:
            name: Deploy artifact
            code: |
                site_name=${DEPLOY_SITENAME:-fs}
                desired_version="${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"

                test -z "$DEPLOY_TOKEN" && fail "Env DEPLOY_TOKEN missing."

                curl -H"Authorization: bearer ${DEPLOY_TOKEN}" "${DEPLOY_ENDPOINT}" --data-urlencode "site=${site_name}" --data-urlencode "desired_version=${desired_version}" -i
                echo $?

    after-steps:
      - wercker/slack-notifier@1.2.1:
          url: $DEPLOY_SLACK_URL
