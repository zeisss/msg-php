box: php

build:
    steps:
        - script:
            name: Validate PHP files
            code: |
                find . -name '*.php' | xargs -I{} php -l {}

        - script:
            name: Run Unit Tests
            code: |
                php tests.php && success "All tests successfully."

        - script:
            name: copy files to pkg/
            code: |
                mkdir -p $WERCKER_OUTPUT_DIR/pkg/msg-php
                cp -r lib/ *.html *.php *.example *.md $WERCKER_OUTPUT_DIR/pkg/msg-php/

                echo "Branch: $WERCKER_GIT_BRANCH" > $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "Commit: $WERCKER_GIT_COMMIT" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "CI: $CI" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerStartedBy: $WERCKER_STARTED_BY" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerApplicationUrl: $WERCKER_APPLICATION_URL" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO
                echo "WerckerBuildUrl: $WERCKER_BUILD_URL" >> $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO

                debug "$(cat $WERCKER_OUTPUT_DIR/pkg/msg-php/INFO)"

        - yudai/targz@0.2.1:
          input: $WERCKER_OUTPUT_DIR/pkg
          output: $WERCKER_OUTPUT_DIR/dist

        - script:
           name: show hash sums
           code: |
               info "$(cat $WERCKER_OUTPUT_DIR/dist/SHASUMS)"
               setMessage "SHA1: $(cat $WERCKER_OUTPUT_DIR/dist/SHASUMS)"

        - zeisss/mfs-upload@0.1.3:
            url: $FS_ENDPOINT
            file: $WERCKER_OUTPUT_DIR/dist/msg-php.tar.gz
            path: /artifacts/msg-php/${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}/msg-php.tar.gz
            username: $FS_USER
            password: $FS_PASSWORD
            acl: public-read

deploy:
    steps:
        - script:
            name: Deploy artifact
            code: |
                site_name=${DEPLOY_SITENAME:-msg}
                desired_version="${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"

                test -z "$DEPLOY_TOKEN" && fail "Env DEPLOY_TOKEN missing."

                deployResult=$(curl -H"Authorization: bearer ${DEPLOY_TOKEN}" "${DEPLOY_ENDPOINT}" --data-urlencode "site=${site_name}" --data-urlencode "desired_version=${desired_version}" --output $WERCKER_REPORT_ARTIFACTS_DIR/deploy.json -w '%{http_code}')
                if [ "$deployResult" -eq 200 ]; then
                  success "Deploy completed."
                else
                  fail "$(cat $WERCKER_REPORT_ARTIFACTS_DIR/deploy.json)"
                fi
    after-steps:
      - wercker/slack-notifier@1.2.1:
          url: $DEPLOY_SLACK_URL
